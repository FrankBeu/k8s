###
##
# * TASKFILE
##  https://taskfile.dev
###
version: '3'

vars:
  domainName:        cert.thesym.site
  repoUrl:           https://charts.jetstack.io 
  repoName:          jetstack 
  chartName:         cert-manager
  labelTier:         edge
  message:           Tasks for {{.chartName}}-helm
  # pvCreate:          true
  # pvCreate:          ""
  # pvRelativePath:    ambassador
  # pvStorageSize:     128Mi
  # pvStorageSize:     1Gi
  # certResolver:      LetsEncryptStaging
  # certResolver:      LetsEncrypt
  #  traefikMiddleware: traefik-basicauth@kubernetescrd


tasks:

  default:
    desc: display info
    cmds:
      - |
        echo -e \
        "\n{{.message}}\n"
      - |
        task -l
    silent: true

###
##
# ** HELM
##
###
  1-repoAdd:
    desc: add the repository
    cmds:
      - |
        helm repo add \
        {{.repoName}} \
        {{.repoUrl}}
      - |
        helm repo update
    silent: true

  2-chartGet:
    desc: download the chart
    cmds:
      - |
        helm pull \
        {{.repoName}}/{{.chartName}} \
        -d CHART \
        --untar
    silent: true

  3-cdrInstall:
    desc: install the required CDRs
    cmds:
      - |
        kubectl apply \
          -f https://github.com/jetstack/cert-manager/releases/download/v1.0.0/cert-manager.crds.yaml
    silent: true

  4-namespaceCreate:
    desc: create the namespace
    cmds:
      - |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1 
        kind: Namespace 
        metadata: 
          name: {{.chartName}}
          labels:
            name: {{.chartName}}
            tier: {{.labelTier}}
            certmanager.k8s.io/disable-validation: "true"
        EOF
    silent: true

  5-chartDebug:
    desc: debug chart
    cmds:
      - |
        helm install \
        --namespace {{.chartName}} \
        --dry-run \
        --debug \
        {{.chartName}} CHART/{{.chartName}}
    silent: true

  6-chartInstall:
    desc: install chart
    cmds:
      - |
        helm install \
        --namespace {{.chartName}} \
        {{.chartName}} CHART/{{.chartName}} \
        #--set installCRDs=true
        #--set ingress.enabled=True \
        #--set ingress.annotations."kubernetes\.io\/ingress\.class"=traefik \
        #--set ingress.annotations."traefik\.ingress\.kubernetes\.io\/router\.middlewares"={{.traefikMiddleware}} \
        #--set ingress.annotations."traefik\.ingress\.kubernetes\.io\/router\.tls\.certresolver"={{.certResolver}} \
        #--set ingress.annotations."traefik\.ingress\.kubernetes\.io\/router\.tls\.domains\.0\.main"={{.domainName}} \
        #--set ingress.hosts.0={{.domainName}}
    silent: true

  7-certIssuerApply:
    desc: create the certIssuer
    cmds:
      - |
        kubectl apply -f clusterIssuer.yaml
    silent: true

  8-challengeApply:
    desc: create the challenge
    cmds:
      - |
        kubectl apply -f challenge.yaml
    silent: true

  9-chartUpdate:
    desc: update chart
    cmds:
      #- |
      #  helm upgrade \
      #  --namespace {{.chartName}} \
      #  {{.chartName}} CHART/{{.chartName}}
      - |
        helm upgrade \
        --namespace {{.chartName}} \
        {{.chartName}} CHART/{{.chartName}} \
        #--set ingress.enabled=True \
        #--set ingress.annotations."kubernetes\.io\/ingress\.class"=traefik \
        #--set ingress.annotations."traefik\.ingress\.kubernetes\.io\/router\.middlewares"={{.traefikMiddleware}} \
        #--set ingress.annotations."traefik\.ingress\.kubernetes\.io\/router\.tls\.certresolver"={{.certResolver}} \
        #--set ingress.annotations."traefik\.ingress\.kubernetes\.io\/router\.tls\.domains\.0\.main"={{.domainName}} \
        #--set ingress.hosts.0={{.domainName}}
    silent: true

  10-chartRemove:
    desc: remove all resources
    cmds:
      - task: chartUninstall
      - task: namespaceDelete
    silent: true


  chartUninstall:
    desc: uninstall the {{.chartName}}-chart
    cmds:
      - |
        helm uninstall {{.chartName}} -n {{.chartName}}
    silent: true
  
  namespaceDelete:
    desc: delete the namespace {{.chartName}}
    cmds:
      - |
        kubectl delete namespace {{.chartName}}
    silent: true
