###
##
# * TASKFILE
##  https://taskfile.dev
###
version: '3'

vars:

  name:                     access

  nameSpace:                "{{.name}}"

  domainName:               "{{.name}}.thesym.site"

  labelTier:                auth

  mappingPort:              80
  mappingServiceName:       "{{.chartName}}"

  portforwardingPortSource: "3333"
  portforwardingPortTarget: "5000"

  message:                   Tasks for {{.name}}{{if .chartName}}-helm{{end}}


tasks:

  taskDebug:
    desc: show all variables in Taskfile
    cmds:
      - |
        echo -e \
        "\n{{range $key, $value := .}} {{$key }}:  \e[92m{{$value}}\e[0m\n {{end}}\n"
    silent: true


  default:
    desc: display info
    cmds:
      - |
        echo -e \
        "\n{{.message}}\n"
      - |
        task -l
    silent: true


###
##
# ** SEQUENCE
##
###
  1:
    desc: ( namespaceApply )
    cmds:
      - task: namespaceApply
    silent: true


  2:
    desc: ( credentialsCreate )
    cmds:
      - task: credentialsCreate
    silent: true


  3:
    desc: ( usersFileUpdate )
    cmds:
      - task: usersFileUpdate 
    silent: true


  4:
    desc: ( secretApply )
    cmds:
      - task: secretApply
    silent: true


  5:
    desc: ( appApply )
    cmds:
      - task: appApply
    silent: true


  6:
    desc: ( userNewAdd )
    cmds:
      - task: userNewAdd
    silent: true


  7:
    desc: ( namespaceDelete )
    cmds:
      - task: namespaceDelete
    silent: true


###
##
# ** ALPHABETICAL
##
###
  configMapApply:
    desc: apply the configMap for {{.name}}
    cmds:
      - |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: {{.name}}-config
          namespace: {{.nameSpace}}
          labels:
            app: {{.name}}
        data: {{ .configMapData | nindent 2}}
        EOF
    silent: true

  namespaceApply:
    desc: apply the namespace {{.nameSpace}}
    cmds:
      - |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1 
        kind: Namespace 
        metadata: 
          name: {{.nameSpace}}
          labels: 
            name: {{.nameSpace}}
            tier: {{.labelTier}}
        EOF
    silent: true


  namespaceDelete:
    desc: delete the namespace {{.nameSpace}}
    cmds:
      - |
        kubectl delete namespace {{.nameSpace}}
    silent: true


  portforward:
    desc: portforwarding for {{.name}}
    cmds:
      - |
        kubectl port-forward --namespace {{.nameSpace}} $(kubectl get pod -o name) {{.portforwardingPortSource}}:{{.portforwardingPortTarget}}
    silent: true
  resourcesRemove:
    desc: ( namespaceDelete )
    cmds:
      - task: namespaceDelete
    silent: true


###
##
# ** CUSTOM
##
###
  appApply:
    desc: "apply the ambassador-basic-auth app"
    cmds:
      - |
        cat <<EOF | kubectl apply -f -
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: {{.name}}
          namespace: {{.nameSpace}}
        spec:
          type: ClusterIP
          ports:
            - name: http-api
              port: 80
              targetPort: http-api
          selector:
            app: {{.name}}
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: {{.name}}
          namespace: {{.nameSpace}}
        spec:
          replicas: 1
          strategy:
            type: RollingUpdate
          selector:
            matchLabels:
              app: {{.name}}
              app: {{.name}}
          template:
            metadata:
              labels:
                app: {{.name}}
            spec:
              containers:
                - name: {{.name}}
                  image: quay.io/datawire/ambassador-auth-httpbasic:0.1.1
                  ports:
                    - name: http-api
                      containerPort: 5000
                  volumeMounts:
                    - name: {{.name}}
                      mountPath: /var/lib/ambassador/auth-httpbasic
                      readOnly: true
              volumes:
                - name: {{.name}}
                  secret:
                    secretName: {{.name}}
                    items:
                      - key: users.yaml
                        path: users.yaml
        EOF
    silent: true


  credentialsCreate:
    desc: "create credentials interactively"
    cmds:
      - |
        cd user
        ./credentialsCreate
    silent: true


  credentialsCreateBuild:
    desc: "build credentialsCreate for linux"
    cmds:
      - |
        cd user/credentialsCreateDir
        go build -o dist/credentialsCreate credentialsCreate.go
    silent: true


  credentialsCreateBuild4Windows:
    desc: "build credentialsCreate for windows"
    cmds:
      - |
        cd user/credentialsCreateDir
        GOOS=windows \
        go build -o dist/credentialsCreate.exe credentialsCreate.go
    silent: true


  credentialsCreateBuild4Windows386:
    desc: "build credentialsCreate for windows386"
    cmds:
      - |
        cd user/credentialsCreateDir
        GOOS=windows GOARCH=386 \
        go build -o dist/credentialsCreate386.exe credentialsCreate.go
    silent: true


  secretApply:
    desc: "apply secret from users.yaml"
    cmds:
      - |
        kubectl create secret \
        generic {{.name}} \
        --namespace={{.nameSpace}} \
        --from-file=user/users.yaml \
        --dry-run=client \
        -o yaml | \
        kubectl apply -f -
    silent: true


  secretDebug:
    desc: "get decoded secret content"
    cmds:
      - |
        kubectl get secret \
        --namespace {{.nameSpace}} \
        {{.name}} \
        -o jsonpath='{.data.users\.yaml}' | \
        base64 --decode
    silent: true


  userNewAdd:
    desc: "usersFileUpdate + secretApply"
    cmds:
      - task: usersFileUpdate
      - task: secretApply
    silent: true


  usersFileUpdate:
    desc: "commit users.yaml and create new file by concatenating all user-files"
    cmds:
      - |
        # mv user/users.yaml user/BAK/users$(date +%s).yaml
        git index add user/users.yaml
        git commit user/users.yaml -m"basicAuth: BAK users.yaml"
        cat user/credentials/*.yaml > user/users.yaml
    silent: true
